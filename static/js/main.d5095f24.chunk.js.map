{"version":3,"sources":["components/Pokemon.js","graphql/get-pokemons.js","containers/PokemonsContainer.js","components/SearchBar.js","App.js","index.js"],"names":["Pokemon","pokemon","className","name","maxHP","maxCP","src","image","alt","attacks","special","slice","map","attack","damage","GET_POKEMONS","gql","PokemonsContainer","useQuery","variables","first","data","pokemons","id","SearchBar","useState","search","setSearch","searchResults","setSearchResults","useEffect","results","filter","toLowerCase","includes","aria-label","type","placeholder","value","onChange","event","target","App","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"kMAwBeA,I,EAAAA,EAtBf,YAA+B,IAAZC,EAAW,EAAXA,QACf,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,4BAAID,EAAQE,SAEhB,sBAAKD,UAAU,gBAAf,UACI,+BAAOD,EAAQG,QACf,+BAAOH,EAAQI,WAEnB,qBAAKH,UAAU,iBAAf,SACI,qBAAKI,IAAKL,EAAQM,MAAOC,IAAKP,EAAQE,SAE1C,qBAAKD,UAAU,mBAAf,SACKD,EAAQQ,QAAQC,QAAQC,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAM,OAC3C,+BAA+CA,EAAOV,MAAtD,UAAcU,EAAOV,KAArB,YAA6BU,EAAOC,kB,gBCGzCC,EAlBMC,YAAH,6V,MCgBHC,MAZf,WAA8B,IAAD,EACgBC,mBAASH,EAAc,CAC5DI,UAAW,CAAEC,MAAO,OADhBC,KADiB,gBACS,GADT,GACTC,gBADS,MACE,GADF,EAKzB,OACI,qBAAKpB,UAAU,YAAf,SACKoB,GAAYA,EAASV,KAAI,SAAAX,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQsB,U,QC8BxDC,EArCG,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACbC,EADa,KACLC,EADK,OAEsBF,mBAAS,IAF/B,mBAEbG,EAFa,KAEEC,EAFF,OAIqBX,mBAASH,EAAc,CAC5DI,UAAW,CAAEC,MAAO,OADhBC,KAJY,gBAIc,GAJd,GAIJC,gBAJI,MAIO,GAJP,EAiBpB,OAPAQ,qBAAU,WACN,IAAMC,EAAUT,EAASU,QAAO,SAAA/B,GAAO,OACnCA,EAAQE,KAAK8B,cAAcC,SAASR,EAAOO,kBAE/CJ,EAAiBE,KAClB,CAACL,EAAQJ,IAGJ,gCACI,oBAAIpB,UAAU,uBAAd,SACI,uBACAiC,aAAW,aACXjC,UAAU,aACVkC,KAAK,OACLC,YAAY,oBACZC,MAAOZ,EACPa,SAnBK,SAAAC,GACjBb,EAAUa,EAAMC,OAAOH,YAoBf,qBAAKpC,UAAU,YAAf,SACK0B,EAAchB,KAAI,SAAAX,GAAO,OACtB,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQsB,aChB/BmB,MAdf,WACI,IAAMC,EAAS,IAAIC,IAAa,CAC5BC,IAAK,yCAET,OACI,8BACI,eAAC,iBAAD,CAAgBF,OAAQA,EAAxB,UACA,cAAC,EAAD,IACA,cAAC,EAAD,UCTZG,IAASC,OACL,cAAC,IAAD,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.d5095f24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Pokemon({ pokemon }) {\r\n    return (\r\n        <div className=\"pokemon\">\r\n            <div className=\"pokemon__name\">\r\n                <p>{pokemon.name}</p>\r\n            </div>\r\n            <div className=\"pokemon__meta\">\r\n                <span>{pokemon.maxHP}</span>\r\n                <span>{pokemon.maxCP}</span>\r\n            </div>\r\n            <div className=\"pokemon__image\">\r\n                <img src={pokemon.image} alt={pokemon.name} />\r\n            </div>\r\n            <div className=\"pokemon__attacks\">\r\n                {pokemon.attacks.special.slice(0, 3).map(attack => (\r\n                    <span key={`${attack.name}-${attack.damage}`}>{attack.name}</span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pokemon;","import gql from 'graphql-tag';\r\n\r\nconst GET_POKEMONS = gql`\r\n    query pokemons($first: Int!) {\r\n        pokemons(first: $first) {\r\n            id\r\n            name\r\n            image\r\n            maxHP\r\n            maxCP\r\n            attacks {\r\n                special {\r\n                    name\r\n                    damage\r\n                }\r\n            }\r\n        }   \r\n    }\r\n`;\r\n\r\nexport default GET_POKEMONS;","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Pokemon from '../components/Pokemon';\r\nimport GET_POKEMONS from '../graphql/get-pokemons';\r\nimport '../App.css'\r\n\r\nfunction PokemonsContainer() {\r\n    const { data: { pokemons = [] } = {} } = useQuery(GET_POKEMONS, {\r\n        variables: { first: 1000 },\r\n    });\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            {pokemons && pokemons.map(pokemon => <Pokemon key={pokemon.id} pokemon={pokemon} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonsContainer;","import React, {useState, useEffect} from 'react';\r\nimport Pokemon from './Pokemon';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport GET_POKEMONS from '../graphql/get-pokemons';\r\n\r\n\r\nconst SearchBar = () => {\r\n    const [search, setSearch] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const { data: { pokemons = [] } = {} } = useQuery(GET_POKEMONS, {\r\n        variables: { first: 1000 },\r\n    });\r\n    const handleChange = event => {\r\n        setSearch(event.target.value);\r\n    };\r\n    useEffect(() => {\r\n        const results = pokemons.filter(pokemon =>\r\n            pokemon.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setSearchResults(results);\r\n    }, [search, pokemons]);\r\n\r\n    return (\r\n            <div>\r\n                <h1 className=\"container search-bar\">\r\n                    <input \r\n                    aria-label=\"search bar\"\r\n                    className=\"search-bar\"\r\n                    type=\"text\" \r\n                    placeholder=\"Search Pokemon...\"\r\n                    value={search}\r\n                    onChange={handleChange}/>\r\n                </h1>\r\n                <div className=\"container\">\r\n                    {searchResults.map(pokemon => (\r\n                        <Pokemon key={pokemon.id} pokemon={pokemon} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/react-hooks';\r\nimport PokemonsContainer from './containers/PokemonsContainer';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nfunction App() {\r\n    const client = new ApolloClient({\r\n        uri: 'https://graphql-pokemon2.vercel.app/'\r\n    });\r\n    return (\r\n        <div>\r\n            <ApolloProvider client={client}>\r\n            <SearchBar />\r\n            <PokemonsContainer />\r\n            </ApolloProvider>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));"],"sourceRoot":""}